
s와 skip, index가 주어질 때
s의 각 알파벳을 index만큼 뒤의 알파벳으로 바꿈 (배열 생성)
index만큼 더한 후, skip에 있는 값 길이 계산 후, skip에 있는 값 배열에서 빼줌
배열의 맨 마지막 아스키코드로 변환한 것 + skip값 길이를 더하고 그 값을 아스키코드->문자로 바꿔준 후 출력

index만큼 s의 배열을 돌린 후,
그 안에 skip이 포함한다면 count++,
그 후 count를 s의 배열에 + 함


function solution(s, skip, index) {
    var answer = '';
    let testarray = [];
    let skiptestarray = [];
    const strarray = s.split("");
    const skiparray = skip.split("");
    strarray.map((ch) => {
        if(ch.charCodeAt() >= 97 && ch.charCodeAt() <= 122) {
            let lower = ch.charCodeAt() + index;
            if (lower > 122) {
                lower = lower - 26
            } 
            testarray.push(lower)
        }
    })

     skiparray.map((ch) => {
        if(ch.charCodeAt() >= 97 && ch.charCodeAt() <= 122) {
            let lower = ch.charCodeAt()
            if (lower > 122) {
                lower = lower - 26
            } 
            skiptestarray.push(lower)
        }
    })
   
    let cnt = 0;
    for(let i = 0; i < testarray.length; i++) {
        for(let j = testarray[i]; j > testarray[i] - index; j--){ 
            
            if(skiptestarray.includes(j)) {
                cnt++;
            }
        }
        testarray[i] = testarray[i]+cnt
        if(testarray[i] > 122) {
            testarray[i] = testarray[i] - 26
        }
        cnt = 0;
    }

    testarray.map((number) => {
        let str = String.fromCodePoint(number);
        answer+=str;
    })
    
    return answer;
}
f
unction solution(s, skip, index) {
    var answer = '';
    let arr = s.split("");
    arr.map((num) => {
        let number = num.charCodeAt();
        for(let i = 0; i < index; i++) {
            number++
            if(number > 122) {
                number = 97
            }
            
            while(skip.includes(String.fromCodePoint(number))) {
                number++;
                if (number > 122) {
                    number = 97
                }
            }
        }
        answer+=String.fromCodePoint(number)
    })
    return answer;
}\





function solution(n, m, section) {
    var answer = 0;
    let arr = [];
    for(let i = section[0]; i <= section[section.length-1]; i++) {
        arr.push(i)
    }
    if(arr.length <= m) {
        answer = 1;
    }
    else if(arr.length > m) {
        let n = arr.length;
        while(n > 0) {
            n = n-m
            answer++;
        }
    }
    return answer;
}